@using FoodHome.Core.Models.Dish;
@using FoodHome.Extensions
@using FoodHome.Common
@model DishesQueryModel;


<form method="get">
    <div class="row">
        <div class="form-group col-md-3 d-flex justify-content-between">
            <div class="form-group">
                <label asp-for="Category"></label>
                <select asp-for="Category" class="form-control">
                    <option value="">All</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category">@category</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label asp-for="DishesPerPage"></label>
                <select asp-for="DishesPerPage" class="form-control">
                    <option value="3">3</option>
                    <option value="6">6</option>
                    <option value="9">9</option>
                </select>
            </div>
        </div>

        <div class="form-group col-md-3">
            <label asp-for="SearchString"></label>
            <input asp-for="SearchString" class="form-control" placeholder="...">
        </div>

        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="DishSorting"></label>
                <select asp-for="DishSorting" class="form-control">
                    <option value="0">Price (Ascending) </option>
                    <option value="1">Price (Descending)</option>
                    <option value="2">Quantity (Ascending)</option>
                    <option value="3">Quantity (Descending)</option>
                    <option value="4">Name</option>
                </select>
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group mt-4 p-2">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>


@{
    int previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    int maxPage = (int)Math.Ceiling((double)Model.TotalDishes /
        Model.DishesPerPage);
}

<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Dish"
           asp-action="Menu"
           asp-route-id="@User.GetId()"
           asp-route-currentPage="@previousPage"
           asp-route-category="@Model.Category"
           asp-route-searchTerm="@Model.SearchString"
           asp-route-sorting="@((int)Model.DishSorting)"><<</a>
    </div>

    @{
        bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
        !Model.Dishes.Any();
    }

    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-primary
           @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Dish"
           asp-action="Menu"
           asp-route-id="@User.GetId()"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-category="@Model.Category"
           asp-route-searchTerm="@Model.SearchString"
           asp-route-sorting="@((int)Model.DishSorting)">>></a>
    </div>
</div>

@if (!Model.Dishes.Any())
{
    <h2 class="text-center">No houses found by the given criteria!</h2>
}



<section class="main-content" >

    <div class="container" >
        <h1 class="text-center text-uppercase text-black">Menu</h1>
        <div class="row">
            @foreach (var dish in Model.Dishes)
            {
               <partial name="_DishPartial" model="@dish"/>
            }
        </div>
    </div>

</section>

@section Styles{
    <link rel="stylesheet" href="~/css/dish.css" asp-append-version="true" />
}